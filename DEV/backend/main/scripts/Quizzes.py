from api.models import *
from api.REQ3.views import new_quiz
from random import randint

quizzes = [
    {
        "tag": "PPP",
        "body": "In C language, which function is commonly used for dynamic memory allocation?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "malloc()",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "allocate()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "new()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "create()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "reserve()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "assign()",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "Qual Ã© o melhor dia para casar, sem sofrer nenhum desgosto?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "1 agosto",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "31 junho",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "2 julho",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "14 fevereiro",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "31 julho",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 6,
                "body": "30 julho",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "What is the purpose of the sizeof operator in C?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To calculate the size of an array",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "To determine the number of elements in a structure",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "To find the length of a string",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "To obtain the size, in bytes, of a variable or data type",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "To perform type casting",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "To create dynamic memory allocations",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "What does the printf function do in C?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Reads user input",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Allocates memory",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Prints formatted output to the console",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Initializes a loop",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Performs arithmetic operations",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Declares a variable",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "In C, how would you free the memory allocated for all nodes in a linked list?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Using the freeList() function",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Using the deleteList() function",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Using the deleteList() function",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Iterating through the list and using the free() function for each node",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "Using the clearList() function",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Using the removeAllNodes() function",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "What is a pointer in C, and what is it commonly used for?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A pointer is a variable that stores integers.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "A pointer is a function in C for accessing files.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "A pointer is a flow control structure in C.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "A pointer is a variable that stores the memory address of another variable.",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "A pointer is a constant that cannot be modified.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "A pointer is used solely for performing mathematical operations.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "Which transport layer protocol is commonly used in streaming videos over the internet?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "HTTP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "FTP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "RTP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "TCP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "UDP",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 6,
                "body": "IP",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "What is the role of the Address Resolution Protocol (ARP) in a computer network?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Packet routing",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Resolution of IP addresses to MAC addresses",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Data encryption",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Establishment of secure connections",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Bandwidth management",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Network access control",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "What is the role of the Domain Name System (DNS) in a network?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Dynamic assignment of IP addresses",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Packet routing",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Translation of domain names to IP addresses",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Network congestion control",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "User authentication",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Establishment of VPN tunnels",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "What does the acronym 'LAN' stand for in computer networks?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Local Area Network",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Long Access Node",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Link Authentication Number",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Logical Address Naming",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Layered Application Network",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Limited Access Node",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "What does the acronym 'VPN' stand for in computer networks?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Virtual Private Network",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Very Powerful Node",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Virtual Protocol Navigator",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Verified Personal Network",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Variable Packet Notation",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Vigilant Privacy Node",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "Which protocol is commonly used in send and receive e-mails?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "FTP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "HTTP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "SMTP",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "SNMP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "TCP",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "UDP",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In operating systems, what is the main function of RAID?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To speed up the operating system installation",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To manage user permissions and access control",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To enhance storage performance and reliability by combining multiple disks",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To provide a user interface for system interaction",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is a 'trap door' in the context of program threats in operating systems?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "A vulnerability that allows unauthorized network access",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "An intentional flaw left by a programmer for later access",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "A type of virus that replicates itself",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "A firewall configuration error",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In operating systems, what does the term 'inode' refer to?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "A network node used for routing packets",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "An index node that contains information about a file",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "A memory address in the virtual memory space",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "A process identifier in a multitasking environment",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is the main purpose of a file system in operating systems?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To manage network connections",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To provide a platform for running applications",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To manage the storage, retrieval, and update of data",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To allocate CPU resources among running processes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is a 'Logic Bomb' in the context of computer security?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "A type of physical hardware malfunction",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "A malware that replicates itself over a network",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "A code that triggers malicious action under certain conditions",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "An error in a program's logic leading to system failure",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In operating systems, what is 'Disk Scheduling' primarily used for?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To manage user permissions for file access",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To prioritize and manage the order of disk I/O requests",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To schedule tasks and processes in the CPU",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To allocate memory to different applications",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "Which of the following is a primary goal of memory management in operating systems?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To optimize network throughput",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To manage the computer's main memory efficiently",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To enhance the graphical user interface",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To secure the computer from external threats",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is the primary purpose of a firewall in a computer network?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To increase the data transfer speed",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To manage network bandwidth",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To protect the network from unauthorized access",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To distribute network traffic evenly",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In operating systems, what is a 'Semaphore' used for?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To detect and correct disk errors",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To manage access to shared resources by multiple processes",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To store frequently used data for quick access",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To track the usage of CPU by different programs",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What does the term 'Deadlock' signify in the context of operating systems?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "A security breach in the system",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "A condition where a set of processes are blocked because each process is holding a resource and waiting for another resource acquired by some other process",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "The termination of a process due to an error",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "A failed attempt to execute a program",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In operating systems, what is a 'Context Switch'?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Changing the user interface based on user preference",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "The process of storing and restoring the state (context) of a CPU so that the process execution can be resumed from the same point at a later time",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Switching the main memory used by a process",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Altering the security settings of a system",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is the primary function of process synchronization in a multitasking operating system?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To allocate memory to different processes",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To ensure that shared resources are accessed in a safe and organized manner by multiple processes",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To distribute CPU time among various processes",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To synchronize the clock of the computer with an external time source",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is a weak entity set in a database context?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "An entity set that can exist independently of other entities",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "An entity set whose existence depends on another entity set",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "An entity set that is rarely used in the database",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "An entity set with limited attributes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In a database, what is an identifying relationship in the context of weak entity sets?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A relationship that uniquely identifies strong entity sets",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "A relationship between two strong entity sets",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "A relationship associating a weak entity set with its identifying entity set",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "A relationship that is not necessary for database integrity",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What does the specialization process in a database entity set imply?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Combining multiple entity sets into one",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Designating subgroupings within an entity set",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Removing entities from an entity set",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Generalizing entities to a higher-level entity",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What are the two types of specialization in databases?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Primary and Secondary",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Overlapping and Disjoint",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Implicit and Explicit",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Composite and Simple",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In a database, what is 'attribute inheritance'?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Copying attributes from one entity set to another",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Lower-level entity sets inheriting attributes from higher-level entity sets",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Assigning new attributes to an entity set",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Removing attributes from an entity set",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is a binary lock in a database system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A lock with two different keys for locking and unlocking",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "A lock that can have only two states: locked (1) or unlocked (0)",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "A lock used for binary data types",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "A lock that allows two transactions to access the same data simultaneously",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is a binary lock in a database system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A lock with two different keys for locking and unlocking",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "A lock that can have only two states: locked (1) or unlocked (0)",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "A lock used for binary data types",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "A lock that allows two transactions to access the same data simultaneously",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What does the shared/exclusive lock concept allow in a database?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Multiple write transactions on the same data item simultaneously",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Concurrent read transactions on the same data item",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Simultaneous deletion of data by multiple transactions",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Locking data items for a single user only",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is the purpose of the Two-Phase Locking protocol in databases?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To ensure data consistency by locking data twice",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "To guarantee serializability of transactions",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "To lock data in two separate phases for security reasons",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "To speed up the transaction process",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In a database, what is deadlock prevention?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Automatically resolving deadlocks when they occur",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Avoiding the conditions that lead to deadlocking",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Detecting deadlocks and rolling back transactions",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Creating a schedule that never causes a deadlock",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What does the Read Committed isolation level in a database transaction ensure?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Transactions can read data not yet committed by other transactions",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Transactions can only read data committed by other transactions",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Transactions cannot read any data modified by other transactions",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Transactions read the most recent committed data",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In database terminology, what is a 'phantom read'?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Reading data that does not exist in the database",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Reading the same data multiple times with different results due to concurrent updates",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "A transaction re-executing a query and getting additional rows that satisfy the query",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Reading corrupted data from the database",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is the primary purpose of the Serializable isolation level in database transactions?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To enable transactions to be rolled back in case of errors",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "To allow multiple transactions to read and write data concurrently",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "To prevent dirty reads, nonrepeatable reads, and phantom reads, ensuring complete isolation",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "To serialize the execution of all transactions in a database",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In a database, what are the ACID properties?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Atomicity, Consistency, Isolation, Durability",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Authentication, Confidentiality, Integrity, Durability",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Allocation, Consistency, Isolation, Distribution",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Atomicity, Compression, Isolation, Distribution",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "What is the primary purpose of finite automata in the theory of computation?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To recognize patterns in strings",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "To perform complex arithmetic operations",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "To optimize database queries",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "To model computation processes and recognize languages",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "To analyze network protocols",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "To simulate quantum computing",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "Which of the following is a regular language?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The set of all context-free languages",
                "is_correct": False,
                "justification": "Regular languages are a subset of context-free languages.",
            },
            {
                id: 2,
                "body": "The set of all recursively enumerable languages",
                "is_correct": False,
                "justification": "Regular languages are a smaller class than recursively enumerable languages.",
            },
            {
                id: 3,
                "body": "The set of all regular expressions",
                "is_correct": True,
                "justification": "Regular languages can be represented by regular expressions.",
            },
            {
                id: 4,
                "body": "The set of all Turing machines",
                "is_correct": False,
                "justification": "Regular languages are less powerful than the set of all languages recognized by Turing machines.",
            },
            {
                id: 5,
                "body": "The set of all non-regular languages",
                "is_correct": False,
                "justification": "This option refers to languages outside the regular language class.",
            },
            {
                id: 6,
                "body": "The set of all undecidable languages",
                "is_correct": False,
                "justification": "Regular languages are decidable.",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "Which of the following statements about finite automata is correct?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Finite automata can recognize context-sensitive languages.",
                "is_correct": False,
                "justification": "Finite automata are less powerful and can only recognize regular languages, which are a subset of context-sensitive languages.",
            },
            {
                id: 2,
                "body": "Finite automata can simulate Turing machines.",
                "is_correct": False,
                "justification": "Finite automata cannot simulate Turing machines; they are less powerful and have limited computational capabilities.",
            },
            {
                id: 3,
                "body": "Deterministic finite automata (DFA) have more expressive power than nondeterministic finite automata (NFA).",
                "is_correct": False,
                "justification": "Nondeterministic finite automata (NFA) are more expressive than deterministic finite automata (DFA) due to their ability to handle multiple transitions.",
            },
            {
                id: 4,
                "body": "Finite automata can recognize regular languages.",
                "is_correct": True,
                "justification": "Correct! Finite automata are specifically designed to recognize regular languages.",
            },
            {
                id: 5,
                "body": "Finite automata can parse context-free grammars.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Finite automata can solve undecidable problems.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "Which of the following statements about finite automata is correct?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Finite automata can recognize context-sensitive languages.",
                "is_correct": False,
                "justification": "Finite automata are less powerful and can only recognize regular languages, which are a subset of context-sensitive languages.",
            },
            {
                id: 2,
                "body": "Finite automata can simulate Turing machines.",
                "is_correct": False,
                "justification": "Finite automata cannot simulate Turing machines; they are less powerful and have limited computational capabilities.",
            },
            {
                id: 3,
                "body": "Deterministic finite automata (DFA) have more expressive power than nondeterministic finite automata (NFA).",
                "is_correct": False,
                "justification": "Nondeterministic finite automata (NFA) are more expressive than deterministic finite automata (DFA) due to their ability to handle multiple transitions.",
            },
            {
                id: 4,
                "body": "Finite automata can recognize regular languages.",
                "is_correct": True,
                "justification": "Correct! Finite automata are specifically designed to recognize regular languages.",
            },
            {
                id: 5,
                "body": "Finite automata can parse context-free grammars.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Finite automata can solve undecidable problems.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "What is the purpose of the Pumping Lemma in the theory of computation?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To prove the decidability of languages",
                "is_correct": False,
                "justification": "The Pumping Lemma is not used to prove decidability but is often used to show the non-regularity of languages.",
            },
            {
                id: 2,
                "body": "To prove the regularity of languages",
                "is_correct": False,
                "justification": "The Pumping Lemma is used to show the non-regularity of languages, not their regularity.",
            },
            {
                id: 3,
                "body": "To prove the context-free nature of languages",
                "is_correct": False,
                "justification": "The Pumping Lemma is not typically used for proving context-free nature.",
            },
            {
                id: 4,
                "body": "To prove the non-regularity of languages",
                "is_correct": True,
                "justification": "The Pumping Lemma is a tool to show that certain languages are not regular.",
            },
            {
                id: 5,
                "body": "To prove the Turing completeness of languages",
                "is_correct": False,
                "justification": "The Pumping Lemma is not used for proving Turing completeness.",
            },
            {
                id: 6,
                "body": "To prove the equivalence of languages",
                "is_correct": False,
                "justification": "The Pumping Lemma is not used for proving equivalence between languages.",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "What is the significance of the Halting Problem in the theory of computation?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "It proves the existence of undecidable problems",
                "is_correct": True,
                "justification": "The Halting Problem is a classic example of an undecidable problem, demonstrating that not all problems can be solved algorithmically.",
            },
            {
                id: 2,
                "body": "It proves the decidability of all problems",
                "is_correct": False,
                "justification": "The Halting Problem actually proves the existence of undecidable problems, not the decidability of all problems.",
            },
            {
                id: 3,
                "body": "It proves the existence of polynomial-time algorithms",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "It proves the existence of regular languages",
                "is_correct": False,
                "justification": "The Halting Problem is unrelated to the existence of regular languages.",
            },
            {
                id: 5,
                "body": "It proves the existence of context-free languages",
                "is_correct": False,
                "justification": "The Halting Problem is not related to the existence of context-free languages.",
            },
            {
                id: 6,
                "body": "It proves the existence of co-NP problems",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "In the context of formal languages, what does the term 'Chomsky hierarchy' refer to?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A hierarchy of programming languages",
                "is_correct": False,
                "justification": "The Chomsky hierarchy is related to the classification of formal languages, not programming languages.",
            },
            {
                id: 2,
                "body": "A hierarchy of machine learning algorithms",
                "is_correct": False,
                "justification": "The Chomsky hierarchy is not related to machine learning algorithms.",
            },
            {
                id: 3,
                "body": "A hierarchy of formal language grammars",
                "is_correct": True,
                "justification": "The Chomsky hierarchy classifies formal language grammars into different types based on their generative power.",
            },
            {
                id: 4,
                "body": "A hierarchy of database query languages",
                "is_correct": False,
                "justification": "The Chomsky hierarchy is not related to database query languages.",
            },
            {
                id: 5,
                "body": "A hierarchy of natural languages",
                "is_correct": False,
                "justification": "The Chomsky hierarchy is not related to natural languages like English or French.",
            },
            {
                id: 6,
                "body": "A hierarchy of encryption algorithms",
                "is_correct": False,
                "justification": "The Chomsky hierarchy is not related to encryption algorithms.",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "What is the primary function of a Turing machine in the theory of computation?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To perform complex arithmetic calculations",
                "is_correct": False,
                "justification": "While Turing machines can perform calculations, their primary function is not focused on arithmetic operations.",
            },
            {
                id: 2,
                "body": "To simulate quantum computation",
                "is_correct": False,
                "justification": "Turing machines are classical models of computation and do not simulate quantum computation.",
            },
            {
                id: 3,
                "body": "To recognize patterns in images",
                "is_correct": False,
                "justification": "Turing machines are not designed for recognizing patterns in images but for processing strings of symbols.",
            },
            {
                id: 4,
                "body": "To model arbitrary computation processes",
                "is_correct": True,
                "justification": "A Turing machine is a theoretical model capable of representing any computable function and arbitrary computation processes.",
            },
            {
                id: 5,
                "body": "To optimize database queries",
                "is_correct": False,
                "justification": "Turing machines are not designed for optimizing database queries but for general computation.",
            },
            {
                id: 6,
                "body": "To generate regular languages",
                "is_correct": False,
                "justification": "Turing machines are more powerful than machines generating regular languages.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the fundamental concept of information theory?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Entropy",
                "is_correct": True,
                "justification": "Entropy is a fundamental concept in information theory, representing the amount of uncertainty or randomness in a set of outcomes.",
            },
            {
                id: 2,
                "body": "Bitrate",
                "is_correct": False,
                "justification": "Bitrate refers to the number of bits processed or transmitted per unit of time and is not the fundamental concept of information theory.",
            },
            {
                id: 3,
                "body": "Compression",
                "is_correct": False,
                "justification": "Compression is a technique to reduce the size of data but is not the fundamental concept of information theory.",
            },
            {
                id: 4,
                "body": "Redundancy",
                "is_correct": False,
                "justification": "Redundancy refers to the repetition of information and is related to but not the fundamental concept of information theory.",
            },
            {
                id: 5,
                "body": "Transmission",
                "is_correct": False,
                "justification": "Transmission is the process of sending data from one point to another but is not the fundamental concept of information theory.",
            },
            {
                id: 6,
                "body": "Decoding",
                "is_correct": False,
                "justification": "Decoding is the process of interpreting encoded information but is not the fundamental concept of information theory.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the Shannon entropy formula?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "H(X) = -Î£ P(x) log2 P(x)",
                "is_correct": True,
                "justification": "Shannon entropy formula calculates the average amount of surprise or uncertainty associated with a random variable X.",
            },
            {
                id: 2,
                "body": "H(X) = Î£ P(x) log2 P(x)",
                "is_correct": False,
                "justification": "This is not the correct form of the Shannon entropy formula; the negative sign is missing.",
            },
            {
                id: 3,
                "body": "H(X) = Î£ P(x) / log2 P(x)",
                "is_correct": False,
                "justification": "This is not the correct form of the Shannon entropy formula; the logarithm base is incorrect.",
            },
            {
                id: 4,
                "body": "H(X) = -Î£ P(x) / log2 P(x)",
                "is_correct": False,
                "justification": "This is not the correct form of the Shannon entropy formula; the negative sign is in the wrong position.",
            },
            {
                id: 5,
                "body": "H(X) = log2 Î£ P(x)",
                "is_correct": False,
                "justification": "This is not the correct form of the Shannon entropy formula; the logarithm applies to the probability of each outcome.",
            },
            {
                id: 6,
                "body": "H(X) = -log2 Î£ P(x)",
                "is_correct": False,
                "justification": "This is not the correct form of the Shannon entropy formula; the negative sign is in the wrong position.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the purpose of error-correcting codes in information theory?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "To detect errors in transmitted data and request retransmission",
                "is_correct": False,
                "justification": "This describes error detection, not error correction.",
            },
            {
                id: 2,
                "body": "To compress data for efficient storage",
                "is_correct": False,
                "justification": "Error-correcting codes are not designed for data compression; their purpose is to enable reliable communication in the presence of errors.",
            },
            {
                id: 3,
                "body": "To encrypt sensitive information",
                "is_correct": False,
                "justification": "Error-correcting codes are not used for encryption; their primary goal is to ensure data integrity.",
            },
            {
                id: 4,
                "body": "To detect and correct errors in transmitted data",
                "is_correct": True,
                "justification": "Error-correcting codes are designed to both detect and correct errors in transmitted data, enhancing the reliability of communication.",
            },
            {
                id: 5,
                "body": "To increase the speed of data transmission",
                "is_correct": False,
                "justification": "Error-correcting codes focus on data integrity, not necessarily on the speed of transmission.",
            },
            {
                id: 6,
                "body": "To encode data into a different format",
                "is_correct": False,
                "justification": "Error-correcting codes are not primarily used for encoding data into a different format.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the relationship between information theory and machine learning?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Information theory has no relevance to machine learning",
                "is_correct": False,
                "justification": "Information theory is foundational to machine learning, providing concepts like entropy, cross-entropy, and the Kullback-Leibler divergence.",
            },
            {
                id: 2,
                "body": "Machine learning is a subset of information theory",
                "is_correct": False,
                "justification": "Machine learning and information theory are related fields, but machine learning is not a subset of information theory.",
            },
            {
                id: 3,
                "body": "Information theory is only relevant to supervised learning",
                "is_correct": False,
                "justification": "Information theory concepts are applicable to various types of machine learning, not limited to supervised learning.",
            },
            {
                id: 4,
                "body": "Machine learning uses information theory to optimize algorithms",
                "is_correct": True,
                "justification": "Information theory is often used in machine learning to design algorithms, evaluate models, and optimize training processes.",
            },
            {
                id: 5,
                "body": "Information theory is limited to deep learning",
                "is_correct": False,
                "justification": "Information theory is relevant to various machine learning approaches, not just limited to deep learning.",
            },
            {
                id: 6,
                "body": "Machine learning and information theory have no common ground",
                "is_correct": False,
                "justification": "Machine learning and information theory share common concepts and principles, contributing to the development of both fields.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the role of mutual information in information theory?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Measuring the amount of information in a single random variable",
                "is_correct": False,
                "justification": "Mutual information measures the dependence between two random variables, not the information in a single variable.",
            },
            {
                id: 2,
                "body": "Quantifying the uncertainty in a probability distribution",
                "is_correct": False,
                "justification": "Mutual information focuses on the relationship between two random variables rather than quantifying uncertainty in a distribution.",
            },
            {
                id: 3,
                "body": "Evaluating the performance of error-correcting codes",
                "is_correct": False,
                "justification": "Mutual information is not directly used to evaluate the performance of error-correcting codes.",
            },
            {
                id: 4,
                "body": "Measuring the amount of shared information between two random variables",
                "is_correct": True,
                "justification": "Mutual information quantifies the amount of shared information between two random variables, indicating their dependence.",
            },
            {
                id: 5,
                "body": "Estimating the efficiency of data compression algorithms",
                "is_correct": False,
                "justification": "Mutual information is not directly used to estimate the efficiency of data compression algorithms.",
            },
            {
                id: 6,
                "body": "Measuring the randomness of a sequence of bits",
                "is_correct": False,
                "justification": "The randomness of a sequence of bits is typically measured by entropy, not mutual information.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the role of mutual information in information theory?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Measuring the amount of information in a single random variable",
                "is_correct": False,
                "justification": "Mutual information measures the dependence between two random variables, not the information in a single variable.",
            },
            {
                id: 2,
                "body": "Quantifying the uncertainty in a probability distribution",
                "is_correct": False,
                "justification": "Mutual information focuses on the relationship between two random variables rather than quantifying uncertainty in a distribution.",
            },
            {
                id: 3,
                "body": "Evaluating the performance of error-correcting codes",
                "is_correct": False,
                "justification": "Mutual information is not directly used to evaluate the performance of error-correcting codes.",
            },
            {
                id: 4,
                "body": "Measuring the amount of shared information between two random variables",
                "is_correct": True,
                "justification": "Mutual information quantifies the amount of shared information between two random variables, indicating their dependence.",
            },
            {
                id: 5,
                "body": "Estimating the efficiency of data compression algorithms",
                "is_correct": False,
                "justification": "Mutual information is not directly used to estimate the efficiency of data compression algorithms.",
            },
            {
                id: 6,
                "body": "Measuring the randomness of a sequence of bits",
                "is_correct": False,
                "justification": "The randomness of a sequence of bits is typically measured by entropy, not mutual information.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the Kullback-Leibler divergence in information theory?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A measure of the difference between two probability distributions",
                "is_correct": True,
                "justification": "The Kullback-Leibler divergence quantifies how one probability distribution diverges from another, providing a measure of information loss.",
            },
            {
                id: 2,
                "body": "A technique for data compression",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is not a technique for data compression; it measures the difference between probability distributions.",
            },
            {
                id: 3,
                "body": "A method for error correction",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is not used for error correction; it assesses the divergence between probability distributions.",
            },
            {
                id: 4,
                "body": "An algorithm for machine learning",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is a concept in information theory and is not itself an algorithm for machine learning.",
            },
            {
                id: 5,
                "body": "A measure of the randomness in a sequence of bits",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is not a measure of randomness; it quantifies the difference between two probability distributions.",
            },
            {
                id: 6,
                "body": "A formula for calculating entropy",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is related to entropy but is specifically a measure of the difference between two probability distributions.",
            },
        ],
    },
    {
        "tag": "TI",
        "body": "What is the Kullback-Leibler divergence in information theory?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A measure of the difference between two probability distributions",
                "is_correct": True,
                "justification": "The Kullback-Leibler divergence quantifies how one probability distribution diverges from another, providing a measure of information loss.",
            },
            {
                id: 2,
                "body": "A technique for data compression",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is not a technique for data compression; it measures the difference between probability distributions.",
            },
            {
                id: 3,
                "body": "A method for error correction",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is not used for error correction; it assesses the divergence between probability distributions.",
            },
            {
                id: 4,
                "body": "An algorithm for machine learning",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is a concept in information theory and is not itself an algorithm for machine learning.",
            },
            {
                id: 5,
                "body": "A measure of the randomness in a sequence of bits",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is not a measure of randomness; it quantifies the difference between two probability distributions.",
            },
            {
                id: 6,
                "body": "A formula for calculating entropy",
                "is_correct": False,
                "justification": "The Kullback-Leibler divergence is related to entropy but is specifically a measure of the difference between two probability distributions.",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "How do you add an item to the end of a list named 'my_list' in Python?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "my_list.add(item)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "my_list.append(item)",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "my_list.insert(item)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "my_list[item]",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "add.my_list(item)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "my_list.extend(item)",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "How do you access the value associated with the key 'key_name' in a dictionary named 'my_dict'?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "my_dict.get('key_name')",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "my_dict['key_name']",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "my_dict(key_name)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "my_dict.values('key_name')",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "my_dict.keys('key_name')",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "get.my_dict('key_name')",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "What is the output of the following code snippet: 'my_tuple = (1, 2, 3); print(my_tuple[1])'?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "1",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "2",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "3",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "(2, 3)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Error",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "(1, 2)",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "In Python's Turtle module, which method is used to move the turtle forward by a specified distance?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "turtle.move(100)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "turtle.forward(100)",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "turtle.walk(100)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "turtle.goto(100)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "turtle.run(100)",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "turtle.advance(100)",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "In Python, what is the output of 'type(123)'?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "<class 'int'>",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 2,
                "body": "<class 'float'>",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "<class 'str'>",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "<class 'number'>",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Error",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "<class 'numeric'>",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "In Python, which mode should you use to open a file for reading only?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "'w'",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "'r'",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "'a'",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "'x'",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "'rb'",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "'rw'",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "In Python, how do you create a new instance of a class named 'MyClass'?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "instance = MyClass.new()",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "instance = new MyClass()",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "instance = MyClass()",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "instance = MyClass.create()",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "instance = create MyClass",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "instance = MyClass.initialize()",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "What are the key components of a well-crafted mission statement?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Detailed financial goals and profit margins",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Clear, concise, and inspiring message for all organizational levels",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "A list of all products and services offered",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Historical background of the organization",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Detailed market analysis and strategies",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Specific operational tactics and methodologies",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "What defines 'core competencies' in a business context?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "The financial resources available to a company",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "The company's most profitable products",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Sets of integrated skills and technologies supporting key products/services",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "The company's market share and positioning",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "The legal structure of the company",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "The company's global reach and international presence",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "What are 'Critical Success Factors' in business analysis?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Financial goals set by the management",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Conditions that must be met for business objectives to be achieved",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Long-term business strategies",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "The company's core competencies",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Specific marketing campaigns",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Employee satisfaction levels",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "What does the Boston Matrix analyze in a business?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Employee performance metrics",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Market growth vs. market share of business units",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "The financial health of the company",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Global expansion strategies",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Internal operational efficiencies",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Employee turnover rates",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "What does SWOT analysis evaluate in a business context?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Supply chain efficiency",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Strengths, Weaknesses, Opportunities, and Threats",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Sales performance in different markets",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Customer satisfaction and feedback",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Financial investments and returns",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Competitor analysis in the industry",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "What does the Five Forces Model primarily analyze?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Financial stability of a company",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Competitive forces shaping an industry's profitability",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Employee satisfaction and workforce dynamics",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Marketing strategies for product positioning",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Corporate social responsibility and ethical practices",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "The technological advancements within an industry",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "Consider a MIPS processor. Suppose you want to divide a number by 8. Consider that the corresponding statement in C for that number would be int num;. Which of the following instructions correctly divides the number by 8? Note: remember that the number can be negative.",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "srl $a0,$a0,3",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "sra $a0,$a0,3",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "sra $a0,$a0,8",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "div $a0,$a0,3",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "srl $a1,$a0,8",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "sra $a0,$a0,8",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "Assume that to complete a given function you must execute the following operations A, B, C, D, E and F in order on a set of 6 different data. Each operation takes 10 minutes to execute. What is the overall execution time assuming pipelined operation mode (without stopping stalls)?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "60 minutes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": " 100 minutes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "110 minutes",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "30 minutes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "200 minutes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "The ori instruction has a 16-bit immediate value. How would you decompose the MIPS assembly instruction ori $s4,$s2, 0xFFA7E2E6 into a valid instruction?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "lui $at, 0xE2E6 > ori $at, $at, 0xFFA7 > ori $s4, $s2, $at",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": " lui $at, 0xFFA7 > andi $at, $at, E2E6 > ori $s4, $s2, $at",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "lui $at, 0xFFA7 > ori $at, $at, 0xE2E > ori $s4, $s2, $at",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "lui $at, 0xFFA7 > ori $s4, $s2, $at",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "ui $at, 0xFFA7 > andi $at, $at, 0xE2E > andi $s4, $s2, $at",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "ES",
        "body": "What does the architecture of a project help define?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Unit tests",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Functional tests",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Probable risks",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Quality attributes",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "When is a grammar said to be ambiguous?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "When the same non terminal symbol is used in more than one production rule",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "When itâs recursive",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "When itâs context free",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "When the same input can be accepted by more than one derivation tree",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is the function of a primary key?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Connecting two registers",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Identifying a table",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Opening a door",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Uniquely identifying a register",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is the function of a primary key?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Connecting two registers",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Identifying a table",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Opening a door",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Uniquely identifying a register",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What is the primary purpose of the 'Encapsulation' principle in Object-Oriented Programming?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To enhance performance by grouping similar tasks.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To ensure that object data is accessible only through its methods.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To make code easier to debug.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To allow objects to be reused in different programs.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "To facilitate parallel development of features.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "To increase the security of the application.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "What is the primary function of the Transmission Control Protocol (TCP) in the TCP/IP model?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Routing data packets between networks.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Providing a reliable, ordered, and error-checked delivery of a stream of packets.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Defining how to establish and terminate network sessions.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Encrypting and securing data transmission.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Assigning IP addresses to devices on a network.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Compressing data for efficient transmission.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is the primary function of a kernel in an operating system?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Managing the computer's hardware and system resources.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Providing a user interface for easier interaction with the system.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Installing and managing software applications.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Protecting the system from viruses and malware.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Optimizing the computer's performance by defragmenting the hard drive.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Managing network connections and internet data transfer.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "What is the primary function of a lexical analyzer (lexer) in the context of compilers?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Optimizing the generated machine code.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Transforming high-level code into intermediate code.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Converting the source code into a sequence of tokens.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Performing syntax analysis to create a parse tree.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Handling variable scoping and resolution.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Generating executable code from intermediate code.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "What is the purpose of the append() method?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Add an element to the beginning of a list.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Remove the last element from a list.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Concatenate two lists.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Insert an element at a specific position in the list.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Reverse the order of elements in a list.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Add an element to the end of a list.",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What is the main concept behind encapsulation in Object-Oriented Programming (OOP) using Java?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "The ability to create multiple instances of a class.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "The process of hiding the implementation details of an object.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "The ability of a class to inherit from multiple other classes.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "The mechanism of defining a method in a subclass that is already defined in its superclass.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "The concept of grouping similar classes into packages.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "The ability to override a method in the same class.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "Which of the following options best describes a lexical analyzer?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A lexical analyzer is a part of the compiler that transforms a sequence of characters into a sequence of tokens. Each token is a meaningful unit of the program, such as a keyword, an identifier, an operator, or a delimiter.",
                "is_correct": True,
                "justification": "This option is correct because a lexical analyzer is a part of the compiler that transforms a sequence of characters into a sequence of tokens.",
            },
            {
                id: 2,
                "body": "âA lexical analyzer is a tool that translates source code directly into machine code.",
                "is_correct": False,
                "justification": "This option is incorrect because a lexical analyzer does not translate source code directly into machine code. This task is performed by other parts of the compiler.",
            },
            {
                id: 3,
                "body": "A lexical analyzer is a tool that checks the syntactic correctness of a program.",
                "is_correct": False,
                "justification": "This option is incorrect because it does not check the syntactic correctness of a program. This task is performed by other parts of the compiler.",
            },
            {
                id: 4,
                "body": "A lexical analyzer is a tool that optimizes the source code to improve the performance of the program.",
                "is_correct": False,
                "justification": "This option is incorrect because it does not optimize the source code to improve the performance of the program. This task is performed by other parts of the compiler.",
            },
            {
                id: 5,
                "body": "A lexical analyzer is a tool that corrects programming errors.",
                "is_correct": False,
                "justification": "This option is incorrect because a lexical analyzer does not correct programming errors. It only transforms a sequence of characters into tokens. Error detection and correction are usually performed by other parts of the compiler.",
            },
            {
                id: 6,
                "body": "A lexical analyzer is a tool that generates graphs from data.",
                "is_correct": False,
                "justification": "This option is incorrect because a lexical analyzer has nothing to do with generating graphs from data. It is a part of the compiler that transforms a sequence of characters into a sequence of tokens.",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "Which of the following options best describes the difference between lists and dictionaries in Python?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Lists and dictionaries in Python are basically the same thing, both are used to store collections of items.",
                "is_correct": False,
                "justification": "This option is incorrect because lists and dictionaries in Python have different uses and properties.",
            },
            {
                id: 2,
                "body": "Python lists can only store items of a single type. Python dictionaries can store items of various types.",
                "is_correct": False,
                "justification": "This option is incorrect because both lists and dictionaries can store items of various types.",
            },
            {
                id: 3,
                "body": "Python lists are used to store multiple values in a single variable. Python dictionaries cannot store multiple values.",
                "is_correct": False,
                "justification": "This option is incorrect because both lists and dictionaries can store multiple values.",
            },
            {
                id: 4,
                "body": "Python lists are an ordered collection of items that can be of any type. Python dictionaries are an unordered collection of key-value pairs.",
                "is_correct": True,
                "justification": "This option is correct, as Python lists are an ordered collection of items that can be of any type. Python dictionaries are an unordered collection of key-value pairs.",
            },
            {
                id: 5,
                "body": "Python lists are used to store numerical data, while Python dictionaries are used to store text data.",
                "is_correct": False,
                "justification": "This option is incorrect because both lists and dictionaries in Python can store various types of data, including numbers and text.",
            },
            {
                id: 6,
                "body": "Python lists cannot be changed after creation, while Python dictionaries can be changed after creation.",
                "is_correct": False,
                "justification": "This option is incorrect because Python lists are mutable, which means you can change their elements after creation.",
            },
        ],
    },
    {
        "tag": "SI",
        "body": "Which of the following options best describes strategic analysis?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Strategic analysis is a process that involves only the evaluation of a companyâs internal strengths and weaknesses.",
                "is_correct": False,
                "justification": "This option is incorrect because strategic analysis is not limited to only evaluating the internal environment.",
            },
            {
                id: 2,
                "body": "Strategic analysis is a process that involves researching the business environment to create a strategy. This includes evaluating the external environment (such as competitors, market, and industry trends) and the internal environment (such as the companyâs resources and capabilities).",
                "is_correct": True,
                "justification": "This option is correct because strategic analysis involves evaluating both the internal and external environment of a company to create an effective strategy.",
            },
            {
                id: 3,
                "body": "Strategic analysis is a process that involves only the evaluation of a companyâs external environment.",
                "is_correct": False,
                "justification": "This option is incorrect because strategic analysis is not limited to only evaluating the external environment.",
            },
            {
                id: 4,
                "body": "âStrategic analysis is a process that involves evaluating a companyâs financial situation.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "A anÃ¡lise estratÃ©gica Ã© um processo que envolve a avaliaÃ§Ã£o do desempenho dos funcionÃ¡rios de uma empresa.",
                "is_correct": False,
                "justification": "This option is incorrect because strategic analysis is not limited to evaluating a companyâs financial situation. It involves evaluating both the internal and external environment of a company, including but not limited to competition, market, industry trends, resources, and capabilities of the company.",
            },
            {
                id: 6,
                "body": "Strategic analysis is a process that involves evaluating the environmental impact of a companyâs operations.",
                "is_correct": False,
                "justification": "This option is incorrect because, although sustainability may be an important part of a companyâs strategy, strategic analysis as a whole is not limited to evaluating the environmental impact of a companyâs operations. It involves a broader evaluation of the competitive environment and the internal situation of an organization.",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "From the instructions below, which is the TAL (true assembly language) instruction.",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "andi $4,$5,0x0000FF00",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "mul $a0, $t0, $t1",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "bge $t1, $t2, salto",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "ori $4, $5, 0x30002024",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "ori $4, $5, 0x01000030",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "In a program written in C and assembly, which of the following commands are valid to generate an executable, named 'exe'.",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "gcc main.c func.s -O exe",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "gcc -c exe main.c func.s",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "gcc main.c func.s -o exe",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "gcc -c main.c func.s exe",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "./exe",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "The execution of the instruction addi $sp, $sp, -16 written in MIPS assembly enables:",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Reserve space on the stack corresponding to 16 words",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Free space on the stack corresponding to 16 words",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Reserve space on the stack corresponding to 4 wordse",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Free space on the stack corresponding to 4 words",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In the topic of Shared and Exclusive Locks, which of the options bellow is true.",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A shared lock produces no conflict as long as all the concurrent transactions are read-only",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "An exclusive lock exists when concurrent transactions are granted read access on the basis of a common lock",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "A shared lock is issued when a transaction wants to update (write) a data item and no locks are currently held on that data item",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "An exclusive lock is issued when a transaction wants to read data from the database and no exclusive lock is held on that data item",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "From the code ''for i in range(6):'' how many iterations will the loop make?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "7",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "6",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "5",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "The statement was not propperly made",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "3",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "12",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "Considering the Network: 192.168.0.0/26. Which of the following optins is the max IP Address for hosts?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "192.168.0.255",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "192.168.1.1",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "192.168.0.62",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "192.168.1.62",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "192.168.1.255",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "When declaring a pointer type variable in C, how many bytes are pre allocated?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "2 bytes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "4 bytes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "8 bytes",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "16 bytes",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "No memory is pre allocated; we must use malloc() for that purpose",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Pointers are a construct made by pointer factories to sell more pointers",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "Which of the following is the IPv4 adress reserved for Multicast DNS, assigned by the Internet Assigned Numbers Authority(IANA)?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "224.0.1.129",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "224.0.0.102",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "224.0.0.2",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "224.0.1.39",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "224.0.0.251",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "Which of the following is not a principle of Object-Oriented Programing",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Modularity",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Abstraction",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Polymorphism",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Encapsulation",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Inheritance",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "Consider a system with 512MB of physical memory and 1GB of virtual memory that uses pagination. The number of pages occupies the 20 most significant bits of the logical address. What is the maximum number of pages per process?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "2^5 pages",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "2^19 pages",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "2^10 pages",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "2^20 pages",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "2^50 pages",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "Your team is designing a new architecture in which the L1 cache has a miss penalty of 100 clock cycles. They are considering including a second level of L2 cache that has a hit rate of 10 cycles and a miss penalty of 300 cycles. What is the right decision?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "It's only worth using a second level if you can guarantee tha the L2 hit rate is over 70%",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "It's worth including a second level of cache because it always allows you to improve the average memory access time",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "You can only make a decision if you know the hit rate and miss rate of L1",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "It is only worth using a second level if you can guarantee that the L2 miss rate is lees than 40%",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "Consider the instruction 'beq $t0, $0, label' and a datapath with five steps: 1- instruction fetch; 2- instruction decode; 3- ALU; 4- memory access; 5- register write. Which of the following statements is TRUE?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The instruction is inactive in step 3 corresponding to the arithmetic and logic unit (ALU)",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "The instruction is only active in the first three stages",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "The instruction is active in all five stages of the datapath",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "The instruction is active only in step 4",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "The instruction is not active in any step",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above is correct",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "Which SQL operation is used to add data to an existing table in a relational database?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "UPDATE",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "INSERT",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "ADD",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "CREATE",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "ALTER",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "DELETE",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "What is the main function of the Firewall in a network environment?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Optimize network bandwidth to improve performance",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Ensure compatibility between different network protocols",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Encrypt all data transmitted on the network",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Manage the allocation of IP addresses on the network",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Accelerate network connection speed",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Filter and monitor network traffic, allowing or blocking based on predefined rules",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "What is the main purpose of the malloc()' function in C?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Allocate memory dynamically during runtime",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Deallocate dynamically allocated memory",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Initialize variables before using them",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Manage parallel execution of threads",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Allocate space for a new function in the program",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Allocate memory space for a new file",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "If an attribute of a class is declared as âpublicâ that means that is visible by:",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Only by subclasses of the classe where its declared",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Only by subclasses where its declared and classes on the same package",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Everything",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Only by its own class",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "In C memory management is done by:",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The compiler only without need of any intervention of the programmer",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "By the compiler with intervention of the programmer if he wants to",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Only by the programmer with the use of âfreeâ âmallocâ âcallocâ and âreallocâ",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Only by the programmer without need of any line of command",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "By the programmer using a sub library called stdio.h",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "The TCP protocol is usefull because:",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Itâs a protocol of highspeed and data liability",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Itâs a protocol slow but with low data liability",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Itâs a protocol slow but with high data liability",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Itâs a protocol of highspeed but with low data liability",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "It allows for multicasting",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": 'Considering: int x = 10; int *ptr = &x; printf("%d\n", *ptr); What will the output be?',
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Compilation error",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "The address of the variable x",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "The value of the variable x",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "The memory size of the variable x",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "A random value",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Segmentation fault",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What does the following query return? SELECT COUNT(*) FROM Employees WHERE Department = 'Sales';",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The average salary of all employees in the 'Sales' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "The number of employees in the 'Sales' department",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "The query updates the salary of employees in the 'Sales' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "The query deletes all records of employees in the 'Sales' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "The query inserts a new employee into the 'Sales' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "The query retrieves the names of employees in the 'Sales' department",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What does the following query return? SELECT AVG(Salary) FROM Employees WHERE Department = 'Finance';",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The query retrieves the total salary of all employees in the 'Finance' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "The query calculates the average salary of employees in the 'Finance' department",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "The query updates the salary of employees in the 'Finance' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "The query deletes all records of employees in the 'Finance' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "The query inserts a new employee into the 'Finance' department",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "The query retrieves the names of employees in the 'Finance' department",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "Which of the following statements is true about the lexical analysis phase in a compiler?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Converts the source code into an abstract syntax tree.",
                "is_correct": False,
                "justification": "JUSTIFICATION1",
            },
            {
                id: 2,
                "body": "Optimizes arithmetic expressions.",
                "is_correct": False,
                "justification": "JUSTIFICATION2",
            },
            {
                id: 3,
                "body": "Responsible for memory allocation of variables.",
                "is_correct": False,
                "justification": "JUSTIFICATION3",
            },
            {
                id: 4,
                "body": "Transforms the source code into tokens.",
                "is_correct": True,
                "justification": "JUSTIFICATION4",
            },
            {
                id: 5,
                "body": "Checks the correctness of data types in expressions.",
                "is_correct": False,
                "justification": "JUSTIFICATION5",
            },
            {
                id: 6,
                "body": "None of the above.",
                "is_correct": False,
                "justification": "JUSTIFICATION6",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "What is the primary goal of the code optimization phase in a compiler?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Remove syntactic and semantic errors from the code.",
                "is_correct": False,
                "justification": "JUSTIFICATION1",
            },
            {
                id: 2,
                "body": "Convert high-level code into machine code.",
                "is_correct": False,
                "justification": "JUSTIFICATION2",
            },
            {
                id: 3,
                "body": "Generate the abstract syntax tree.",
                "is_correct": False,
                "justification": "JUSTIFICATION3",
            },
            {
                id: 4,
                "body": "Improve the performance of the code without changing its functionality.",
                "is_correct": True,
                "justification": "JUSTIFICATION4",
            },
            {
                id: 5,
                "body": "Manage memory allocation during program execution.",
                "is_correct": False,
                "justification": "JUSTIFICATION5",
            },
            {
                id: 6,
                "body": "None of the above.",
                "is_correct": False,
                "justification": "JUSTIFICATION6",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "What is the main function of a symbol table in a compiler?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Store information about the structure of the source code.",
                "is_correct": False,
                "justification": "JUSTIFICATION1",
            },
            {
                id: 2,
                "body": "Keep the tokens generated by lexical analysis.",
                "is_correct": False,
                "justification": "JUSTIFICATION2",
            },
            {
                id: 3,
                "body": "Convert high-level code into intermediate code.",
                "is_correct": False,
                "justification": "JUSTIFICATION3",
            },
            {
                id: 4,
                "body": "Maintain a record of all identifiers (such as variables and functions) with relevant information.",
                "is_correct": True,
                "justification": "JUSTIFICATION4",
            },
            {
                id: 5,
                "body": "Store the operation codes of machine instructions.",
                "is_correct": False,
                "justification": "JUSTIFICATION5",
            },
            {
                id: 6,
                "body": "None of the above.",
                "is_correct": False,
                "justification": "JUSTIFICATION6",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "In the context of formal languages and grammars, what is the primary purpose of terminal symbols in a context-free grammar (CFG)?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Terminal symbols define the alphabet of the language.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Terminal symbols specify the production rules of the language.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Terminal symbols generate the strings of the language by rewriting non-terminal symbols.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Terminal symbols determine the regularity of the language.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "All of the above",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "Which of the following is NOT typically considered one of the primary layers in the model for computer networks?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Physical Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Transport Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Application Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Logic Layer",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Data Link Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Network Layer",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "In the context of computer networks and communication, the Transmission Control Protocol (TCP) operates at which layer?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Physical Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Data Link Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Network Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Transport Layer",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Session Layer",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Application Layer",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "RC",
        "body": "In a network with the IP address range 192.168.0.128/26, what is the broadcast IP address?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "192.168.0.255",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "192.168.0.191",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 3,
                "body": "192.168.0.254",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "192.168.0.190",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "192.168.0.129",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "192.168.0.128",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "What is a key difference between non-deterministic finite automata (NFA) and deterministic finite automata (DFA)?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "NFAs always have more states than DFAs",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "DFAs can recognize regular languages, while NFAs cannot",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "NFAs and DFAs have the same expressive power and can recognize the same set of languages",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "NFAs require a stack for processing, while DFAs do not",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "NFAs are used for recognizing context-free languages, while DFAs are used for regular languages",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "NFAs can have multiple transitions for a given input symbol, while DFAs have a single transition",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
    {
        "tag": "TC",
        "body": "What is a key difference between non-deterministic finite automata (NFA) and deterministic finite automata (DFA)?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "NFAs always have more states than DFAs",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "DFAs can recognize regular languages, while NFAs cannot",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "NFAs and DFAs have the same expressive power and can recognize the same set of languages",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "NFAs require a stack for processing, while DFAs do not",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "NFAs are used for recognizing context-free languages, while DFAs are used for regular languages",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "NFAs can have multiple transitions for a given input symbol, while DFAs have a single transition",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "Given the Python code: my_list = [1, 2, 3, 4, 5]; new_list = my_list[1:4]; print(new_list). What will the output be?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "[2, 3, 4]",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "[1, 2, 3]",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "[2, 3, 4, 5]",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "[1, 2, 3, 4]",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "[3, 4, 5]",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "[2, 3]",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In the context of O.S. we say that exists trashing when: ",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "We are playing with a trash talker.",
                "is_correct": False,
                "justification": "This option is unrelated to the concept of trashing in the context of operating systems.",
            },
            {
                id: 2,
                "body": "The CPU is overheating.",
                "is_correct": False,
                "justification": "Trashing in the context of an operating system refers to a specific memory management issue, not CPU overheating.",
            },
            {
                id: 3,
                "body": "The O.S. uses a segmentation system to allocate RAM for processes and has a low demand for memory.",
                "is_correct": False,
                "justification": "Trashing depends on the scheduler and is related to the demand for memory, which may vary based on the specific characteristics of the workload and the segmentation system. While a low demand for memory might reduce the likelihood of trashing, it's not the only factor. The scheduler's behavior and the nature of processes can influence whether trashing occurs.",
            },
            {
                id: 4,
                "body": "The O.S. uses a paging system, and there is excessive page swapping.",
                "is_correct": True,
                "justification": "Trashing can also occur in a paging system when there is excessive page swapping, leading to performance degradation.",
            },
            {
                id: 5,
                "body": "The O.S. is undergoing a routine update.",
                "is_correct": False,
                "justification": "Trashing is not related to routine software updates; it pertains to memory management problems in the operating system.",
            },
            {
                id: 6,
                "body": "The hard drive is almost full.",
                "is_correct": False,
                "justification": "Trashing is primarily associated with memory management issues, not the storage capacity of the hard drive.",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "Which of the following sorting algorithms has a time complexity of O(n*log(n))? ",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Quick Sort",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Bogo Sort",
                "is_correct": False,
                "justification": "Bogo Sort does not have a guaranteed time complexity and is generally inefficient.",
            },
            {
                id: 3,
                "body": "Dijkstra's Algorithm",
                "is_correct": False,
                "justification": "Dijkstra's Algorithm is not a sorting algorithm; it is a graph traversal algorithm.",
            },
            {
                id: 4,
                "body": "Insertion Sort",
                "is_correct": False,
                "justification": "Insertion Sort has an average time complexity of O(n^2), not O(n*log(n)).",
            },
            {
                id: 5,
                "body": "Selection Sort",
                "is_correct": False,
                "justification": "Selection Sort has an average time complexity of O(n^2), not O(n*log(n)).",
            },
            {
                id: 6,
                "body": "Bubble Sort",
                "is_correct": False,
                "justification": "Bubble Sort has an average time complexity of O(n^2), not O(n*log(n)).",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "Which of the following compiler optimization techniques aims to reduce the number of instructions executed by a program?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Lexical Analysis",
                "is_correct": False,
                "justification": "Lexical Analysis is the first phase of a compiler and deals with tokenization, not instruction reduction.",
            },
            {
                id: 2,
                "body": "Abstract Syntax Tree (AST)",
                "is_correct": False,
                "justification": "AST represents the hierarchical structure of a program but is not an optimization technique focused on reducing instructions.",
            },
            {
                id: 3,
                "body": "Register Allocation",
                "is_correct": False,
                "justification": "Register Allocation assigns variables to CPU registers but does not necessarily reduce the number of executed instructions.Register Allocation assigns variables to CPU registers but does not necessarily reduce the number of executed instructions.",
            },
            {
                id: 4,
                "body": "Code Inlining",
                "is_correct": False,
                "justification": "Code Inlining involves replacing a function call with the actual code of the function but may not always reduce the overall number of instructions.",
            },
            {
                id: 5,
                "body": "Dead Code Elimination",
                "is_correct": False,
                "justification": "Dead Code Elimination removes code that does not affect program output but may not necessarily reduce the total number of instructions executed.",
            },
            {
                id: 6,
                "body": "Loop Unrolling",
                "is_correct": True,
                "justification": "Loop Unrolling is a compiler optimization technique that aims to reduce loop overhead and increase instruction-level parallelism.",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What is the purpose of process scheduling in an operating system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Option 1: Managing file systems",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Option 2: Allocating and managing CPU resources efficiently",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 3,
                "body": "Option 3: Providing a user interface",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Option 4: Managing network connections",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Option 5: Storing and organizing data on storage devices",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Option 6: Performing mathematical calculations",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "Which function in C is used to dynamically allocate memory for a single variable?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Option 1: malloc()",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 2,
                "body": "Option 2: calloc()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Option 3: realloc()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Option 4: free()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Option 5: new()",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Option 6: delete()",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is the purpose of the SQL SELECT statement in a relational database?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Option 1: Inserting new records into a table",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Option 2: Updating existing records in a table",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Option 3: Deleting records from a table",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Option 4: Retrieving data from one or more tables",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 5,
                "body": "Option 5: Creating a new database schema",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Option 6: Modifying the structure of a database table",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is the function of the Control Unit in a processor?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Perform Arithmetic Operations",
                "is_correct": False,
                "justification": "The UC does not perform arithmetic operations, it controls the execution of the instructions.",
            },
            {
                id: 2,
                "body": "Store temporary data",
                "is_correct": False,
                "justification": "Temporary data storage is done by memory.",
            },
            {
                id: 3,
                "body": "Control the execution of instructions",
                "is_correct": True,
                "justification": "The Control Unit is responsible for monitoring the execution of instructions.",
            },
            {
                id: 4,
                "body": "Communicate with peripheral devices",
                "is_correct": False,
                "justification": "Communication with peripherals is usually performed by specific controllers.",
            },
            {
                id: 5,
                "body": "Managing Main Memory",
                "is_correct": False,
                "justification": "Memory management is done by a separate drive.",
            },
            {
                id: 6,
                "body": "Perform complex calculations",
                "is_correct": False,
                "justification": "Complex calculations are performed by the Logic and Arithmetic Unit (ALU).",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is von Neumann architecture?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A computer architecture that uses only cache memory",
                "is_correct": False,
                "justification": "The von Neumann architecture includes main memory and not just cache.",
            },
            {
                id: 2,
                "body": "A model that separates memory into instructions and data",
                "is_correct": True,
                "justification": "In von Neumann's architecture, instructions and data share the same memory.",
            },
            {
                id: 3,
                "body": "An architecture that uses exclusively the assembly language",
                "is_correct": False,
                "justification": "Von Neumann's architecture is not directly related to the assembly language.",
            },
            {
                id: 4,
                "body": "A model that does not use a Central Processing Unit (CPU)",
                "is_correct": False,
                "justification": "The von Neumann architecture includes a CPU for processing.",
            },
            {
                id: 5,
                "body": "A model that uses exclusively digital logic",
                "is_correct": False,
                "justification": "Von Neumann's architecture does not exclude the use of digital logic, but it is not an exclusive feature.",
            },
            {
                id: 6,
                "body": "An architecture that does not allow the execution of sequential instructions",
                "is_correct": False,
                "justification": "The von Neumann architecture allows for sequential execution of instructions.",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is a data bus in a computer system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A pathway that allows data transfer between the CPU and memory",
                "is_correct": True,
                "justification": "The data bus is the pathway through which data is transferred between the CPU and memory.",
            },
            {
                id: 2,
                "body": "A secondary storage device",
                "is_correct": False,
                "justification": "Secondary storage devices are different from data buses.",
            },
            {
                id: 3,
                "body": "A wireless communication protocol",
                "is_correct": False,
                "justification": "Data buses are usually physical and not wireless.",
            },
            {
                id: 4,
                "body": "A central control unit",
                "is_correct": False,
                "justification": "The control unit is separate from the data bus.",
            },
            {
                id: 5,
                "body": "A type of assembly instruction",
                "is_correct": False,
                "justification": "The data bus is not an instruction but rather a pathway for data transfer.",
            },
            {
                id: 6,
                "body": "A temporary storage unit",
                "is_correct": False,
                "justification": "The data bus is not a storage unit but a transfer pathway.",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is the RISC architecture?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "An architecture that exclusively uses complex instructions",
                "is_correct": False,
                "justification": "RISC utilizes simple and specific instructions.",
            },
            {
                id: 2,
                "body": "A model that does not use registers",
                "is_correct": False,
                "justification": "RISC extensively uses registers to optimize performance.",
            },
            {
                id: 3,
                "body": "An architecture that prioritizes the use of variable-sized instructions",
                "is_correct": False,
                "justification": "RISC uses fixed-size instructions to simplify the execution pipeline.",
            },
            {
                id: 4,
                "body": "An architecture that seeks to maximize the number of cycles per instruction",
                "is_correct": False,
                "justification": "RISC aims to minimize the number of cycles per instruction to improve performance.",
            },
            {
                id: 5,
                "body": "A model that favors simplicity of instructions and efficient use of registers",
                "is_correct": True,
                "justification": "RISC prioritizes simple instructions and efficient use of registers.",
            },
            {
                id: 6,
                "body": "An architecture that exclusively uses assembly language",
                "is_correct": False,
                "justification": "RISC is not directly related to assembly language.",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is the cache memory in a computer system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A type of non-volatile memory",
                "is_correct": False,
                "justification": "Cache memory is volatile.",
            },
            {
                id: 2,
                "body": "A long-term memory",
                "is_correct": False,
                "justification": "Cache memory is short-term memory used to store temporary data.",
            },
            {
                id: 3,
                "body": "A type of main memory",
                "is_correct": False,
                "justification": "Cache memory is separate from main memory and used to store frequently accessed data.",
            },
            {
                id: 4,
                "body": "A slow-access memory",
                "is_correct": False,
                "justification": "Cache memory is fast-access to improve system performance.",
            },
            {
                id: 5,
                "body": "A fast-access memory used to store frequently accessed temporary data",
                "is_correct": True,
                "justification": "Cache memory is used to store frequently accessed temporary data, improving system performance.",
            },
            {
                id: 6,
                "body": "A memory that replaces RAM",
                "is_correct": False,
                "justification": "Cache memory complements RAM, not replaces it.",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is ROM memory in a computer system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A volatile memory used to store temporary data",
                "is_correct": False,
                "justification": "ROM memory is non-volatile and typically contains permanent data.",
            },
            {
                id: 2,
                "body": "A random access memory used to store running programs",
                "is_correct": False,
                "justification": "This description applies more to RAM than to ROM memory.",
            },
            {
                id: 3,
                "body": "A volatile memory used to store the operating system",
                "is_correct": False,
                "justification": "ROM memory is non-volatile and usually contains firmware or the basic operating system.",
            },
            {
                id: 4,
                "body": "A non-volatile memory used to store permanent data or system instructions",
                "is_correct": True,
                "justification": "ROM memory is non-volatile and stores permanent data or system instructions, such as firmware.",
            },
            {
                id: 5,
                "body": "A slow-access memory used to store frequently accessed temporary data",
                "is_correct": False,
                "justification": "This description fits more with cache memory than ROM memory.",
            },
            {
                id: 6,
                "body": "A fast-access memory used to store running programs",
                "is_correct": False,
                "justification": "This description applies more to cache memory than ROM memory.",
            },
        ],
    },
    {
        "tag": "AC",
        "body": "What is the pipeline in computer architecture?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A temporary storage component",
                "is_correct": False,
                "justification": "The pipeline is not a storage component but rather a technique for organizing instruction execution.",
            },
            {
                id: 2,
                "body": "A set of specific instructions",
                "is_correct": False,
                "justification": "The pipeline is not a set of instructions but rather an approach to improve processing performance.",
            },
            {
                id: 3,
                "body": "A technique that allows simultaneous execution of multiple instructions",
                "is_correct": True,
                "justification": "The pipeline allows multiple stages of instruction processing to occur simultaneously, improving processor efficiency.",
            },
            {
                id: 4,
                "body": "A type of fast-access memory",
                "is_correct": False,
                "justification": "The pipeline is not a memory but rather a technique for instruction execution.",
            },
            {
                id: 5,
                "body": "A specific processing unit",
                "is_correct": False,
                "justification": "The pipeline is not a specific processing unit but rather a technique applied to the processor.",
            },
            {
                id: 6,
                "body": "A technique that avoids parallel execution of instructions",
                "is_correct": False,
                "justification": "On the contrary, the pipeline is designed to allow parallel execution of instructions.",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What is encapsulation in object-oriented programming?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A concept that allows hiding implementation details of a class",
                "is_correct": True,
                "justification": "Encapsulation allows hiding internal details of a class, exposing only the necessary interface.",
            },
            {
                id: 2,
                "body": "A type of multiple inheritance",
                "is_correct": False,
                "justification": "Encapsulation is not related to multiple inheritance but rather to hiding implementation details.",
            },
            {
                id: 3,
                "body": "The ability to create objects",
                "is_correct": False,
                "justification": "The creation of objects is related to the instantiation of classes, not to encapsulation.",
            },
            {
                id: 4,
                "body": "The ability to hide public interfaces of a class",
                "is_correct": False,
                "justification": "Encapsulation is related to hiding implementation details, not just public interfaces.",
            },
            {
                id: 5,
                "body": "A type of polymorphism",
                "is_correct": False,
                "justification": "Encapsulation and polymorphism are distinct concepts in object-oriented programming.",
            },
            {
                id: 6,
                "body": "The ability to inherit from multiple classes",
                "is_correct": False,
                "justification": "Encapsulation is not related to inheriting from multiple classes.",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What is inheritance in object-oriented programming?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A concept that allows hiding implementation details of a class",
                "is_correct": False,
                "justification": "This definition refers to encapsulation, not inheritance.",
            },
            {
                id: 2,
                "body": "The ability to create objects",
                "is_correct": False,
                "justification": "The creation of objects is related to the instantiation of classes, not inheritance.",
            },
            {
                id: 3,
                "body": "The ability to hide public interfaces of a class",
                "is_correct": False,
                "justification": "This definition also refers to encapsulation, not inheritance.",
            },
            {
                id: 4,
                "body": "The ability of a class to inherit attributes and methods from another class",
                "is_correct": True,
                "justification": "Inheritance allows a class to acquire attributes and methods from another class.",
            },
            {
                id: 5,
                "body": "A type of polymorphism",
                "is_correct": False,
                "justification": "Inheritance and polymorphism are distinct concepts in object-oriented programming.",
            },
            {
                id: 6,
                "body": "The ability to inherit from multiple classes",
                "is_correct": False,
                "justification": "This definition refers to multiple inheritance, not single inheritance.",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What is polymorphism in object-oriented programming?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The ability to create objects",
                "is_correct": False,
                "justification": "The creation of objects is related to the instantiation of classes, not to polymorphism.",
            },
            {
                id: 2,
                "body": "The ability to hide public interfaces of a class",
                "is_correct": False,
                "justification": "This definition refers to encapsulation, not polymorphism.",
            },
            {
                id: 3,
                "body": "The ability of a class to inherit attributes and methods from another class",
                "is_correct": False,
                "justification": "This definition refers to inheritance, not polymorphism.",
            },
            {
                id: 4,
                "body": "The ability of a class to assume different forms, treating objects from different classes uniformly",
                "is_correct": True,
                "justification": "Polymorphism allows objects from different classes to be treated uniformly.",
            },
            {
                id: 5,
                "body": "A type of encapsulation",
                "is_correct": False,
                "justification": "Polymorphism and encapsulation are distinct concepts in object-oriented programming.",
            },
            {
                id: 6,
                "body": "The ability to inherit from multiple classes",
                "is_correct": False,
                "justification": "This definition refers to multiple inheritance, not polymorphism.",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What are interfaces in object-oriented programming?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Classes that cannot be instantiated",
                "is_correct": False,
                "justification": "Abstract classes cannot be instantiated, but interfaces are something different.",
            },
            {
                id: 2,
                "body": "A type of encapsulation",
                "is_correct": False,
                "justification": "Interfaces are not a form of encapsulation but rather a contract for implementation.",
            },
            {
                id: 3,
                "body": "A set of methods that a class must implement",
                "is_correct": True,
                "justification": "Interfaces define a contract that classes must follow, specifying the methods to be implemented.",
            },
            {
                id: 4,
                "body": "A type of polymorphism",
                "is_correct": False,
                "justification": "Interfaces and polymorphism are related concepts but are not the same thing.",
            },
            {
                id: 5,
                "body": "Classes that do not have attributes",
                "is_correct": False,
                "justification": "Classes can have attributes even when implementing interfaces.",
            },
            {
                id: 6,
                "body": "A type of multiple inheritance",
                "is_correct": False,
                "justification": "Interfaces allow something similar to multiple inheritance but are not the same thing.",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What are abstract classes in object-oriented programming?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Classes that cannot be instantiated",
                "is_correct": True,
                "justification": "Abstract classes provide a common structure for their subclasses but cannot be instantiated directly.",
            },
            {
                id: 2,
                "body": "A set of methods that a class must implement",
                "is_correct": False,
                "justification": "This describes more of an interface than an abstract class.",
            },
            {
                id: 3,
                "body": "A type of encapsulation",
                "is_correct": False,
                "justification": "Abstract classes can contain encapsulated elements, but that is not their main characteristic.",
            },
            {
                id: 4,
                "body": "A type of polymorphism",
                "is_correct": False,
                "justification": "Abstract classes can participate in polymorphism, but that is not their primary definition.",
            },
            {
                id: 5,
                "body": "Classes that do not have attributes",
                "is_correct": False,
                "justification": "Abstract classes can have attributes, even if they cannot be instantiated directly.",
            },
            {
                id: 6,
                "body": "A type of multiple inheritance",
                "is_correct": False,
                "justification": "Abstract classes allow something similar to multiple inheritance but are not the same thing.",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "What is method overloading in object-oriented programming?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "The ability to create methods with the same name in a class",
                "is_correct": True,
                "justification": "Method overloading allows a class to have multiple methods with the same name but different parameters.",
            },
            {
                id: 2,
                "body": "The replacement of one method by another in the same class",
                "is_correct": False,
                "justification": "This description refers more to method overriding than to method overloading.",
            },
            {
                id: 3,
                "body": "The creation of methods in derived classes",
                "is_correct": False,
                "justification": "Method overloading is not related to the creation of methods in derived classes.",
            },
            {
                id: 4,
                "body": "The ability to hide the implementation of a method",
                "is_correct": False,
                "justification": "This describes more the idea of encapsulation than method overloading.",
            },
            {
                id: 5,
                "body": "The creation of static methods in a class",
                "is_correct": False,
                "justification": "Method overloading involves creating methods with the same name but different parameters.",
            },
            {
                id: 6,
                "body": "The ability to create multiple constructors in a class",
                "is_correct": False,
                "justification": "Although it's possible to use method overloading in constructors, it applies to methods in general.",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "Among the instructions below, which is a valid SQL statement?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "SELECT name FROM customers WHERE age > 25",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 2,
                "body": "MULTIPLY salary BY 1.1 WHERE department = 'IT'",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "COMPARE name = 'John' AND surname = 'Smith'",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "UPDATE products SET quantity = quantity - 1 WHERE id = 102",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "INSERT INTO employees (id, name, position) VALUES (101, 'Ana', 'Analyst')",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "Which of the following is an essential component of an operating system?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Kernel",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Compiler",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Debugger",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Router",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Database",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "COMP",
        "body": "Which of the following is a primary function of a compiler?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Code Compilation",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Database Management",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Network Routing",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "User Interface Design",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Memory Allocation",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "None of the above",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "In Python, what does the zip() function do?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Combines two lists into a single list.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Unzips a compressed file.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Creates an iterator that aggregates elements from multiple iterable objects.",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 4,
                "body": "Sorts a list in ascending order.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Converts a string to uppercase.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Checks if a file exists in the specified path.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "PPP",
        "body": "What is the purpose of the static keyword in C",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Declares a variable that is visible only within the current function.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Indicates that a variable will be modified by multiple threads.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Specifies that a function should be compiled to machine code.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Allocates memory for a variable on the heap.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Declares a global variable that can be accessed from other source files.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Specifies that a variable retains its value between function calls.",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "What does the sudo command in Linux allow a user to do?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Install new software packages.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Create a new user account.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Delete files and directories.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Change the system hostname.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Access the system as the root user.",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 6,
                "body": "Modify file permissions.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "SO",
        "body": "In an operating system, what is 'context switching' primarily responsible for?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Switching between different user interfaces.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Changing the priority of processes currently running.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Managing the transfer of data between memory and disk.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Saving and restoring the state of a process so it can resume execution.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Updating the system clock and triggering scheduled tasks.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Encrypting and decrypting data stored on the system.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "POO",
        "body": "In object-oriented programming, which principle is demonstrated when a single function or method can have multiple behaviors based on the object it is called on?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "Encapsulation",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "Inheritance",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "Polymorphism",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "Abstraction",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "Composition",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "Aggregation",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "In relational database management systems (RDBMS), what is the primary function of a primary key?",
        "opt_text": "",
        "options": [
            {
                "id": 1,
                "body": "To speed up the performance of queries and operations.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 2,
                "body": "To encrypt data for security purposes.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 3,
                "body": "To uniquely identify each record in a database table.",
                "is_correct": True,
                "justification": "",
            },
            {
                "id": 4,
                "body": "To define relationships between different tables.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 5,
                "body": "To store user preferences and settings.",
                "is_correct": False,
                "justification": "",
            },
            {
                "id": 6,
                "body": "To automatically update data across multiple tables.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "IPRP",
        "body": "What is an algorithm?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "A computer program.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "A data input device.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "A data output device.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "A data storage device.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "A sequence of instructions that specifies how to perform a task.",
                "is_correct": True,
                "justification": "",
            },
            {
                id: 6,
                "body": " A data processing device.",
                "is_correct": False,
                "justification": "",
            },
        ],
    },
    {
        "tag": "BD",
        "body": "What is the main purpose of concurrency control in a database system?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Improve data security.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Increase the efficiency of consultations.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Ensure data consistency.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Reduce storage space.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Facilitate the recovery of lost data.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Ensure that multiple competing transactions do not cause inconsistent results.",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
    {
        "tag": "ES",
        "body": "What is the main objective of unit testing in Software Engineering?",
        "opt_text": "",
        "options": [
            {
                id: 1,
                "body": "Check the functionality of the system as a whole.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 2,
                "body": "Ensure that the code is free from compilation errors.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 3,
                "body": "Test the integration between different modules.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 4,
                "body": "Identify flaws in software design.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 5,
                "body": "Evaluate the general performance of the application.",
                "is_correct": False,
                "justification": "",
            },
            {
                id: 6,
                "body": "Validate the individual and isolated behavior of code units, such as functions or methods.",
                "is_correct": True,
                "justification": "",
            },
        ],
    },
]


def add_quizzes():
    for quiz_n in range(len(quizzes)):
        quizzes[quiz_n]["tags"] = [quizzes[quiz_n].pop("tag")]
        if quiz_n < 5:
            new_quiz(
                quizzes[quiz_n],
                User.objects.get(id=1),
                3,
            )
            vote_for(1, quiz_n, False, 2, "Porque depois")
            vote_for(1, quiz_n, False, 3, "entra")
            vote_for(1, quiz_n, False, 4, "agosto")
        elif quiz_n < 20:
            new_quiz(
                quizzes[quiz_n],
                User.objects.get(id=1),
                4,
            )
            vote_for(1, quiz_n, True, 2)
            vote_for(1, quiz_n, True, 3)
            vote_for(1, quiz_n, True, 4)
        elif quiz_n < 30:
            user_id = 6 + quiz_n % 10
            new_quiz(
                quizzes[quiz_n],
                User.objects.get(id=user_id),
                4,
            )
            vote_for(user_id, quiz_n, True, 1)
            vote_for(user_id, quiz_n, True, 2)
            vote_for(user_id, quiz_n, True, 3)
        elif quiz_n < 32:
            user_id = 6
            new_quiz(
                quizzes[quiz_n],
                User.objects.get(id=user_id),
                2,
            )
            vote_for(user_id, quiz_n, True, 3)
            vote_for(user_id, quiz_n, True, 2)
        else:
            user_id = 2 + (quiz_n % 4)
            new_quiz(
                quizzes[quiz_n],
                User.objects.get(id=user_id),
                4,
            )
            vote_for(user_id, quiz_n, True, 1)
            vote_for(user_id, quiz_n, True, 10)
            vote_for(user_id, quiz_n, True, 11)


def vote_for(id, quiz_n, state=True, id_user=1, justification=" "):
    # temp_id = id
    # while temp_id == id:
    #     temp_id = randint(1, 15)

    v = Vote(
        user_id=id_user,
        is_approved=state,
        justification=justification,
        question_id=quiz_n + 1,
    )
    v.save()
